@using Entity.Domain.ApplicationUser;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ApplicationUser> _userManager;

@{
    if (User.Identity.IsAuthenticated)
    {
        ViewBag.IsVerify = _userManager.GetUserAsync(User).Result.IsVerify;
        ViewBag.FullName = _userManager.GetUserAsync(User).Result.FirstName + " " + _userManager.GetUserAsync(User).Result.LastName;
        ViewBag.UserId = _userManager.GetUserAsync(User).Result.Id;
    }
}
@{
    ViewData["Title"] = "Home Page";
}
@{
    string message = "";

    if (DateTime.Now.Hour > 0 && DateTime.Now.Hour <= 6)
    {
        message = "İyi geceler.";
    }
    else if (DateTime.Now.Hour > 6 && DateTime.Now.Hour <= 10)
    {
        message = "Günaydın.";
    }
    else if (DateTime.Now.Hour > 10 && DateTime.Now.Hour <= 20)
    {
        message = "İyi öğlenler.";
    }
    else
    {
        message = "İyi akşamlar.";
    }

}

@if (User.Identity.IsAuthenticated)
{
    @if (ViewBag.IsVerify == "0")
    {
        <div class="text-center" style="margin-top:200px">
            <h3>@message</h3>
            <h1 class="display-4">Hoşgeldin! @ViewBag.FullName</h1>
            <p>Ses kaydı yapılmamış görünüyor. Birkaç dakikanı alacağız ve kayıt sonrası işlemlerine devam edebileceksin.</p>
            <br>
            <button class="btn btn-success btn-lg" onclick='recordCount("@ViewBag.UserId")'>Kaydı Başlat</button>
        </div>
    }
    else
    {
        <div class="text-center" style="margin-top:200px">
            <h3>@message</h3>
            <h1 class="display-4">Hoşgeldin! @ViewBag.FullName</h1>
            <p>Üst kısımdaki menüden işlemlerine devam edebilirsin</p>
        </div>
    }
}
else
{
    <div class="text-center" style="margin-top:200px">
        <h3>@message</h3>
        <h1 class="display-4">Hoşgeldin!</h1>
        <p>Giriş yaparak işlemlerine devam edebilirsin</p>
    </div>
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function recordCount (userid) {
        let timerInterval;
        let startTime = 30000;
        let period = 1000;
        Swal.fire({
            title: 'Ses kaydediliyor..',
            html: '<b id="recordTimer"></b> saniye kaldı.',
            timer: 31000,
            timerProgressBar: true,
            didOpen: () => {
                fetch("http://localhost:5000/test/" + userid, {
                    mode: "no-cors"
                })
                $('html').css("pointer-events","none");
                Swal.showLoading();
                const b = document.getElementById("recordTimer");
                timerInterval = setInterval(() => {
                    b.innerHTML = startTime / 1000;
                    startTime = (startTime - period);
                    if (startTime == 1000) {
                        clearInterval(this);
                        updateIsVerify(userid);
                    }
                }, 1000)
            }
        })
    }

    function updateIsVerify(userid) {
        $.ajax({
            type: "post",
            data: { id: userid },
            url: '@Url.Action("UpdateUserVerify", "User")',
            success: function (res) {
                Swal.fire({
                    position: 'top-end',
                    icon: 'success',
                    title: 'Ses kaydı başarıyla oluşturuldu.',
                    showConfirmButton: false,
                    timer: 1333,
                    width: 400,
                    willClose: () => {
                        window.location.reload(true);
                    }
                })
            }
        })
    }

</script>


